@using EduPlatformProject.Classes
@using EduPlatformProject.Resources
@using Microsoft.Data.SqlClient
@using Microsoft.Extensions.Localization
@using System.Data
@using System.Globalization
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = localizer["Exams"];
    DataTable tbl = ViewBag.Exams;
    var lang = CultureInfo.CurrentCulture.TwoLetterISOLanguageName;
}
@inject IStringLocalizer<SharedResources> localizer

<h1 class="mt-5 text-center">@ViewData["Title"]</h1>
@if (Context.Session.GetString("id") != null)
{
    <div class="mt-4 d-flex justify-content-center">
        <a class="btn btn-outline-primary" href="/Home/createExam">
            @localizer["CreateExam"]
        </a>
    </div>
}

<div class="container mt-4">
    <div class="d-flex flex-column gap-3">
        @for (int i = 0; i < tbl.Rows.Count; i++)
        {
            var item = tbl.Rows[i];
            var questions = GetQuestions(item["id"].ToString());
            var answers = GetAnswers(item["id"].ToString());

            <div class="border rounded p-3">
                <h5>@(lang == "ar" ? item["title_ar"] : item["title_tr"])</h5>
                <span class="text-secondary mt-2">
                    @(lang == "ar" ? item["content_ar"] : item["content_tr"])
                </span>
                <form class="d-flex flex-column gap-3 p-3 bg-light rounded mt-3" method="post" action="/home/submitExam">
                    <input name="exam_id" value="@item["id"]" hidden />
                    <div class="d-flex flex-column gap-3">
                        @for (int j = 0; j < questions.Rows.Count; j++)
                        {
                            var q = questions.Rows[j];

                            if ((bool)q["is_multiple_choice"])
                            {
                                var options = new Dictionary<string, string>
                                {
                                    { "answer_1", lang == "ar" ? q["answer_1_ar"].ToString() : q["answer_1_tr"].ToString() },
                                    { "answer_2", lang == "ar" ? q["answer_2_ar"].ToString() : q["answer_2_tr"].ToString() },
                                    { "answer_3", lang == "ar" ? q["answer_3_ar"].ToString() : q["answer_3_tr"].ToString() }
                                };

                                var shuffledOptions = ShuffleOptions(options);

                                <div>
                                    <h5>@(lang == "ar" ? q["question_ar"] : q["question_tr"])</h5>
                                    @foreach (var option in shuffledOptions)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="answer_1" id="@option.Key" value="@option.Value">
                                            <label class="form-check-label" for="@option.Key">
                                                @option.Value
                                            </label>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div>
                                    <h5>@(lang == "ar" ? q["question_ar"] : q["question_tr"])</h5>
                                    <input type="text" class="form-control" name="answer_2" value="" />
                                </div>
                            }
                        }
                    </div>
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-outline-primary">@localizer["EnterExam"]</button>
                    </div>
                </form>


                <div class="d-flex flex-column gap-3 mt-4 p-3 bg-light">
                    @for (int j = 0; j < answers.Rows.Count; j++)
                    {
                        <div class="d-flex gap-5 rounded bg-white">
                            <h5>@answers.Rows[j]["first_name"] @answers.Rows[j]["last_name"]</h5>
                            <span>@answers.Rows[j]["grade"] / 2</span>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@functions {
    DataTable GetQuestions(string id)
    {
        SqlDataAdapter cmd = new($"SELECT * FROM exam_questions WHERE exam_id = '{id}'", Database.ConnStr);
        DataTable tbl = new();
        cmd.Fill(tbl);
        return tbl;
    }

    DataTable GetAnswers(string id)
    {
        SqlDataAdapter cmd = new($"SELECT * FROM exam_submittions a LEFT JOIN users b ON a.user_id = b.id WHERE a.exam_id = '{id}';", Database.ConnStr);
        DataTable tbl = new();
        cmd.Fill(tbl);
        return tbl;
    }

    public List<KeyValuePair<string, string>> ShuffleOptions(Dictionary<string, string> options)
    {
        var random = new Random();
        return options.OrderBy(x => random.Next()).ToList();
    }
}